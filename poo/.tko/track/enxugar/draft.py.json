{
    "patches": [
        {
            "label": "2025-10-05_14-14-56",
            "content": "@@ -1,1744 +0,0 @@\n-class Towel:%0A    def __init__(self, color: str, size: str): %0A        self.color: str = color%0A        self.size: str = size%0A        self.wetness: int = 0%0A%0A    def dry(self, amount: int) -%3E None:%0A        self.wetness -= amount%0A        if self.wetness %3C 0:%0A            self.wetness = 0%0A        print(f%22toalha seca: umidade %7Bself.wetness%7D%22)%0A%0A    def isDry(self) -%3E bool:%0A        return self.wetness == 0%0A        %0A    def wringOut(self) -%3E None:%0A        self.wetness = 0%0A%0A    def getMaxWetness(self) -%3E int:%0A        if self.size == 'P':%0A            return 10%0A        if self.size == 'M':%0A            return 20%0A        if self.size == 'G':%0A            return 30%0A        return 0%0A        %0A    def __str__(self) -%3E str:%0A        return f%22Cor: %7Bself.color%7D, Tamanho: %7Bself.size%7D, Umidade: %7Bself.wetness%7D%22%0A    %0Adef main():%0A    toalha = None%0A    while True:%0A        line: str = input()%0A        print(%22$%22+ line)%0A        args: list%5Bstr%5D = line.split()%0A        if args%5B0%5D == %22end%22:%0A            break%0A        elif args%5B0%5D == %22criar%22:%0A            color = args%5B1%5D%0A            size = args%5B2%5D%0A            toalha = Towel(color, size)%0A        elif args%5B0%5D == %22mostrar%22:%0A            if toalha:%0A                print(toalha)%0A            else:%0A                print(%22fail: toalha n%C3%A3o criada%22)%0A        elif args%5B0%5D == %22dry%22:%0A            if toalha:%0A                amount: int = int(args%5B1%5D)%0A                toalha.dry(amount)%0A            else:%0A                print(%22fail: toalha n%C3%A3o criada%22)%0A        elif args%5B0%5D == %22enxugar%22:%0A            if toalha:%0A                toalha.wringOut()%0A                print(%22toalha enxugada%22)%0A            else:%0A                print(%22fail: toalha n%C3%A3o criada%22)%0A        else:%0A            print(%22fail: comando invalido%22)%0A            %0Amain()\n",
            "lines": "0"
        },
        {
            "label": "2025-10-05_14-27-42",
            "content": "@@ -1290,519 +1290,113 @@\n == %22\n-seca%22:%0A            if toalha:%0A                print(%22sim%22 if toalha.isDry() else %22n%C3%A3o%22)%0A            else:%0A                print(%22fail: toalha n%C3%A3o criada%22)%0A        elif args%5B0%5D == %22dry%22:%0A            if toalha:%0A                amount: int = int(args%5B1%5D)%0A                toalha.dry(amount)%0A            else:%0A                print(%22fail: toalha n%C3%A3o criada%22)%0A        elif args%5B0%5D == %22encharcar%22:%0A            if toalha:%0A                toalha.wetness = toalha.getMaxWetness()%0A                print(%22toalha encharcada%22\n+dry%22:%0A            if toalha:%0A                amount: int = int(args%5B1%5D)%0A                toalha.dry(amount\n )%0A  \n@@ -1718,15 +1718,27 @@\n alido%22)%0A\n+            \n %0Amain()\n",
            "lines": "63"
        },
        {
            "label": "2025-10-05_14-49-38",
            "content": "@@ -1157,20 +1157,114 @@\n     \n-print(toalha\n+if toalha:%0A                print(toalha)%0A            else:%0A                print(%22fail: toalha n%C3%A3o criada%22\n )%0A  \n@@ -1293,16 +1293,43 @@\n %22seca%22:%0A\n+            if toalha:%0A    \n         \n@@ -1370,24 +1370,91 @@\n else %22n%C3%A3o%22)%0A\n+            else:%0A                print(%22fail: toalha n%C3%A3o criada%22)%0A\n         elif\n@@ -1472,16 +1472,43 @@\n  %22dry%22:%0A\n+            if toalha:%0A    \n         \n@@ -1546,24 +1546,28 @@\n             \n+    \n toalha.dry(a\n@@ -1573,16 +1573,509 @@\n amount)%0A\n+            else:%0A                print(%22fail: toalha n%C3%A3o criada%22)%0A        elif args%5B0%5D == %22encharcar%22:%0A            if toalha:%0A                toalha.wetness = toalha.getMaxWetness()%0A                print(%22toalha encharcada%22)%0A            else:%0A                print(%22fail: toalha n%C3%A3o criada%22)%0A        elif args%5B0%5D == %22enxugar%22:%0A            if toalha:%0A                toalha.wringOut()%0A                print(%22toalha enxugada%22)%0A            else:%0A                print(%22fail: toalha n%C3%A3o criada%22)%0A\n         \n@@ -2124,27 +2124,15 @@\n alido%22)%0A\n-            \n %0Amain()\n",
            "lines": "74"
        },
        {
            "label": "2025-10-05_15-09-58",
            "content": "@@ -208,17 +208,17 @@\n wetness \n-+\n+-\n = amount\n@@ -246,31 +246,11 @@\n ess \n-%3E= self.getMaxWetness()\n+%3C 0\n :%0A  \n@@ -278,86 +278,10 @@\n s = \n-self.getMaxWetness()%0A            print('toalha encharcada')%0A        else:%0A    \n+0%0A\n     \n",
            "lines": "53"
        },
        {
            "label": "2025-10-05_15-14-47",
            "content": "@@ -1253,114 +1253,20 @@\n     \n-if toalha:%0A                print(toalha)%0A            else:%0A                print(%22fail: toalha n%E9%81%94o criada%22\n+print(toalha\n )%0A  \n@@ -1299,35 +1299,8 @@\n a%22:%0A\n-            if toalha:%0A    \n     \n@@ -1348,77 +1348,10 @@\n e %22n\n-%E9%81%94o%22)%0A            else:%0A                print(%22fail: toalha n%E9%81%94o criada\n+%C3%A3o\n %22)%0A \n@@ -1384,35 +1384,8 @@\n y%22:%0A\n-            if toalha:%0A    \n     \n@@ -1427,28 +1427,24 @@\n             \n-    \n toalha.dry(a\n@@ -1454,75 +1454,8 @@\n nt)%0A\n-            else:%0A                print(%22fail: toalha n%E9%81%94o criada%22)%0A\n     \n",
            "lines": "55"
        },
        {
            "label": "2025-10-05_15-20-23",
            "content": "@@ -354,32 +354,96 @@\n rcada')%0A        \n+else:%0A            print(f%22toalha seca: umidade %7Bself.wetness%7D%22)%0A\n %0A    def isDry(s\n@@ -1349,167 +1349,9 @@\n ha n\n-%C3%A3o criada%22)%0A        elif args%5B0%5D == %22torcer%22:%0A            if toalha:%0A                toalha.wringOut()%0A            else:%0A                print(%22fail: toalha n%C3%A3\n+%E9%81%94\n o cr\n@@ -1465,17 +1465,17 @@\n  else %22n\n-%C3%A3\n+%E9%81%94\n o%22)%0A    \n@@ -1517,33 +1517,33 @@\n (%22fail: toalha n\n-%C3%A3\n+%E9%81%94\n o criada%22)%0A     \n@@ -1566,15 +1566,11 @@\n == %22\n-enxugar\n+dry\n %22:%0A \n@@ -1728,9 +1728,9 @@\n ha n\n-%C3%A3\n+%E9%81%94\n o cr\n",
            "lines": "64"
        },
        {
            "label": "2025-10-05_15-57-34",
            "content": "@@ -283,146 +283,81 @@\n     \n-print('toalha encharcada')  # Se ainda der erro, troque para 'toalha encharcada' sem acento%0A            self.wetness = self.getMaxWetness(\n+self.wetness = self.getMaxWetness()%0A            print('toalha encharcada'\n )%0A  \n@@ -854,21 +854,12 @@\n a = \n-Towel(%22%22, %22%22)\n+None\n %0A   \n@@ -1189,84 +1189,272 @@\n     \n-print(toalha)%0A        elif args%5B0%5D == %22torcer%22:%0A            toalha.wringOut(\n+if toalha:%0A                print(toalha)%0A            else:%0A                print(%22fail: toalha n%C3%A3o criada%22)%0A        elif args%5B0%5D == %22torcer%22:%0A            if toalha:%0A                toalha.wringOut()%0A            else:%0A                print(%22fail: toalha n%C3%A3o criada%22\n )%0A  \n@@ -1483,16 +1483,43 @@\n %22seca%22:%0A\n+            if toalha:%0A    \n         \n@@ -1563,10 +1563,77 @@\n e %22n\n+%C3%A3o%22)%0A            else:%0A                print(%22fail: toalha n%C3%A3o criad\n a\n-o\n %22)%0A \n@@ -1662,24 +1662,51 @@\n  %22enxugar%22:%0A\n+            if toalha:%0A    \n             \n@@ -1740,24 +1740,28 @@\n             \n+    \n toalha.dry(a\n@@ -1767,16 +1767,83 @@\n amount)%0A\n+            else:%0A                print(%22fail: toalha n%C3%A3o criada%22)%0A\n         \n",
            "lines": "67"
        },
        {
            "label": "2025-10-05_16-20-15",
            "content": "class Towel:\n    def __init__(self, color: str, size: str): \n        self.color: str = color\n        self.size: str = size\n        self.wetness: int = 0\n\n    def dry(self, amount: int) -> None:\n        self.wetness += amount\n        if self.wetness >= self.getMaxWetness():\n            print('toalha encharcada')  # Se ainda der erro, troque para 'toalha encharcada' sem acento\n            self.wetness = self.getMaxWetness()\n        \n    def isDry(self) -> bool:\n        return self.wetness == 0\n        \n    def wringOut(self) -> None:\n        self.wetness = 0\n\n    def getMaxWetness(self) -> int:\n        if self.size == 'P':\n            return 10\n        if self.size == 'M':\n            return 20\n        if self.size == 'G':\n            return 30\n        return 0\n        \n    def __str__(self) -> str:\n        return f\"Cor: {self.color}, Tamanho: {self.size}, Umidade: {self.wetness}\"\n    \ndef main():\n    toalha = Towel(\"\", \"\")\n    while True:\n        line: str = input()\n        print(\"$\"+ line)\n        args: list[str] = line.split()\n        if args[0] == \"end\":\n            break\n        elif args[0] == \"criar\":\n            color = args[1]\n            size = args[2]\n            toalha = Towel(color, size)\n        elif args[0] == \"mostrar\":\n            print(toalha)\n        elif args[0] == \"torcer\":\n            toalha.wringOut()\n        elif args[0] == \"seca\":\n            print(\"sim\" if toalha.isDry() else \"nao\")\n        elif args[0] == \"enxugar\":\n            amount: int = int(args[1])\n            toalha.dry(amount)\n        else:\n            print(\"fail: comando invalido\")\n            \nmain()",
            "lines": "55"
        }
    ]
}