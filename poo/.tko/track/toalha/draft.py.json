{
    "patches": [
        {
            "label": "2025-09-16_19-39-27",
            "content": "@@ -1,43 +0,0 @@\n-print ('cade o hamburguer desse lanche')%0A%0A%0A\n",
            "lines": "0"
        },
        {
            "label": "2025-09-16_19-41-21",
            "content": "@@ -5,30 +5,38 @@\n t ('\n-minha toalha %C3%A9 amarela\n+cade o hamburguer desse lanche\n ')%0A%0A\n",
            "lines": "3"
        },
        {
            "label": "2025-09-16_20-01-11",
            "content": "@@ -1,164 +1,35 @@\n-class  Towel:%0A    def __init__(self):%0Aself.color ='red'%0Aself.size = 'p'%0Aself.wetness = 0%0A%0Atowel = Towel()%0Aprint(towel.color)%0Aprint(towel.size)%0Aprint(towel.wetness)\n+print ('minha toalha %C3%A9 amarela')%0A%0A\n %0A\n",
            "lines": "3"
        },
        {
            "label": "2025-09-16_20-09-50",
            "content": "@@ -31,24 +31,16 @@\n (self):%0A\n-        \n self.col\n@@ -47,23 +47,14 @@\n or =\n- \n 'red'%0A\n-        \n self\n@@ -69,16 +69,8 @@\n 'p'%0A\n-        \n self\n@@ -85,15 +85,8 @@\n  = 0\n-%0A      \n %0A%0Ato\n",
            "lines": "10"
        },
        {
            "label": "2025-09-16_20-12-01",
            "content": "@@ -32,31 +32,8 @@\n self\n-, color: str, size: str\n ):%0A \n@@ -53,21 +53,16 @@\n olor\n-: str = color\n+ = 'red'\n %0A   \n@@ -79,20 +79,14 @@\n size\n-: str = size\n+ = 'p'\n %0A   \n@@ -106,174 +106,36 @@\n ness\n-: int 0%0A        %0A    def __str__(self):%0A        return f 'color:%7Bself.color%7D, tam:%7Bself.size%7D, hum: %7Bself.wetness%7D'%0A      %0A%0Atowel = Towel('green', 'G')%0Atoalha = Towel\n+ = 0%0A      %0A%0Atowel = Towel()\n %0Apri\n",
            "lines": "11"
        },
        {
            "label": "2025-09-16_20-24-43",
            "content": "@@ -141,18 +141,16 @@\n ess: int\n- =\n  0%0A     \n",
            "lines": "15"
        },
        {
            "label": "2025-09-20_00-50-34",
            "content": "@@ -363,9 +363,8 @@\n etness)%0A\n-%0A\n",
            "lines": "15"
        },
        {
            "label": "2025-09-20_00-50-50",
            "content": "@@ -41,20 +41,19 @@\n or: \n-azul\n+str\n , size: \n p):%0A\n@@ -48,17 +48,19 @@\n , size: \n-p\n+str\n ):%0A     \n",
            "lines": "16"
        },
        {
            "label": "2025-09-20_01-12-36",
            "content": "@@ -41,19 +41,20 @@\n or: \n-str\n+azul\n , size: \n str)\n@@ -49,19 +49,17 @@\n , size: \n-str\n+p\n ):%0A     \n@@ -160,28 +160,27 @@\n  %0A    def __\n-init\n+str\n __(self):%0A  \n@@ -184,16 +184,91 @@\n %0A       \n+ return f 'color:%7Bself.color%7D, tam:%7Bself.size%7D, hum: %7Bself.wetness%7D'%0A      \n %0A%0Atowel \n",
            "lines": "16"
        },
        {
            "label": "2025-09-20_19-00-08",
            "content": "@@ -212,17 +212,17 @@\n reen', '\n-h\n+G\n ')%0Atoalh\n",
            "lines": "15"
        },
        {
            "label": "2025-09-20_19-00-31",
            "content": "@@ -150,543 +150,40 @@\n = 0%0A\n-%0A    def getMaxWetness(self):%0A        if self.size == 'P':%0A            return 10%0A        if self.size == 'M':%0A            return 20%0A        if self.size == 'G':%0A            return 30%0A        return 0%0A        %0A    def Dry(self, amount: int):%0A       self.wetness += amount%0A       if self.wetness %3E self.getMaxWetness:%0A           print ('toalha encharcada')%0A%0A    def wringOut(self):%0A        self.wetness = 0%0A%0A    def isDry(self):%0A        if self.wetness == 0:%0A            print ('true')%0A        else:%0A            print ('false')%0A%0A        \n+        %0A    def __init__(self):\n %0A   \n",
            "lines": "15"
        },
        {
            "label": "2025-09-20_20-00-13",
            "content": "@@ -681,555 +681,120 @@\n     \n-def show(self):%0A        print(self)%0A%0A    def __str__(self):%0A        return f%22%7Bself.color%7D %7Bself.size%7D %7Bself.wetness%7D%22%0A%0Atowel = Towel(%22Azul%22, %22P%22)%0Atowel.show()  # Azul P 0%0Atowel.dry(5)%0Atowel.show()  # Azul P 5%0Aprint(towel.isDry()) # False%0Atowel.dry(5)%0Atowel.show()  # Azul P 10%0Atowel.dry(5) # msg: toalha encharcada%0Atowel.show()  # Azul P 10%0A%0Atowel.wringOut()%0Atowel.show()  # Azul P 0%0A%0Atowel = Towel(%22Verde%22, %22G%22)%0Aprint(towel.isDry()) # True%0Atowel.dry(30)%0Atowel.show()  # Verde G 30%0Aprint(towel.isDry()) # False%0Atowel.dry(1)  # msg: toalha encharcada\n+    %0A       %0A%0Atowel = Towel('green', 'h')%0Atoalha = Towel%0Aprint(towel.color)%0Aprint(towel.size)%0Aprint(towel.wetness)\n %0A%0A\n",
            "lines": "38"
        },
        {
            "label": "2025-09-20_20-18-45",
            "content": "@@ -363,17 +363,17 @@\n     def \n-d\n+D\n ry(self,\n@@ -562,17 +562,17 @@\n   def is\n-d\n+D\n ry(self)\n",
            "lines": "55"
        },
        {
            "label": "2025-09-20_20-19-52",
            "content": "@@ -504,74 +504,8 @@\n da')\n-%0A            self.wetness = self.getMaxWetness()%0A        %0A        \n %0A%0A  \n",
            "lines": "55"
        },
        {
            "label": "2025-09-20_20-21-25",
            "content": "@@ -504,32 +504,33 @@\n da')%0A           \n+ \n self.wetness = s\n@@ -549,21 +549,16 @@\n tness()%0A\n-    %0A\n         \n",
            "lines": "58"
        },
        {
            "label": "2025-09-20_20-21-47",
            "content": "@@ -460,18 +460,16 @@\n xWetness\n-()\n :%0A      \n",
            "lines": "59"
        },
        {
            "label": "2025-09-20_20-23-17",
            "content": "class  Towel:\n    def __init__(self, color: str, size: str):\n        self.color: str = color\n        self.size: str = size\n        self.wetness: int = 0\n\n    def getMaxWetness(self):\n        if self.size == 'P':\n            return 10\n        if self.size == 'M':\n            return 20\n        if self.size == 'G':\n            return 30\n        return 0\n        \n    def dry(self, amount: int):\n       self.wetness += amount\n       if self.wetness > self.getMaxWetness():\n           print ('toalha encharcada')\n           self.wetness = self.getMaxWetness()\n    \n        \n        \n\n    def wringOut(self):\n        self.wetness = 0\n\n    def isdry(self):\n        if self.wetness == 0:\n            print ('true')\n        else:\n            print ('false')\n\n    def show(self):\n        print(self)\n\n    def __str__(self):\n        return f\"{self.color} {self.size} {self.wetness}\"\n\ntowel = Towel(\"Azul\", \"P\")\ntowel.show()  # Azul P 0\ntowel.dry(5)\ntowel.show()  # Azul P 5\nprint(towel.isDry()) # False\ntowel.dry(5)\ntowel.show()  # Azul P 10\ntowel.dry(5) # msg: toalha encharcada\ntowel.show()  # Azul P 10\n\ntowel.wringOut()\ntowel.show()  # Azul P 0\n\ntowel = Towel(\"Verde\", \"G\")\nprint(towel.isDry()) # True\ntowel.dry(30)\ntowel.show()  # Verde G 30\nprint(towel.isDry()) # False\ntowel.dry(1)  # msg: toalha encharcada\n\n",
            "lines": "59"
        }
    ]
}