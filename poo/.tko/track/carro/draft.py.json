{
    "patches": [
        {
            "label": "2025-09-30_01-59-50",
            "content": "@@ -38,17 +38,17 @@\n s: int, \n-g\n+G\n as: int,\n@@ -98,17 +98,17 @@\n    self.\n-g\n+G\n as: int \n",
            "lines": "10"
        },
        {
            "label": "2025-10-04_19-47-15",
            "content": "@@ -2,18 +2,16 @@\n lass car\n-ro\n :%0A    de\n@@ -27,27 +27,24 @@\n _(self, Pass\n-Max\n : int, gasMa\n@@ -45,45 +45,24 @@\n  gas\n-Max\n : int\n-):%0A        self.Pass\n+, km\n : int\n- = 0\n+):\n %0A   \n@@ -79,19 +79,16 @@\n Pass\n-Max\n : int = \n Pass\n@@ -83,23 +83,17 @@\n : int = \n-PassMax\n+0\n %0A       \n@@ -115,37 +115,8 @@\n = 0%0A\n-        self.gasMax = gasMax%0A\n     \n@@ -177,17 +177,17 @@\n eturn f%22\n-P\n+p\n ass:%7Bsel\n@@ -228,590 +228,8 @@\n km%7D%22\n-%0A    %0A    def show(self):%0A        print(str(self))%0A%0A    def enter(self): %0A        if self.Pass %3C self.PassMax:%0A            self.Pass += 1%0A        else:%0A            print('fail: limite de pessoas atingido.')%0A    def fuel(self, amount):%0A        self.gas += amount%0A        if self.gas %3E self.gasMax:%0A            self.gas = self.gasMax%0Adef main():%0A    car = carro(2, 100)  # Exemplo de valores para PassMax e gasMax%0A    while True:%0A        line = input()%0A        if line == %22end%22:%0A            break%0A%0A        print(%22$%22 + line)%0A        parts = line.split()%0A%0A        cmd = parts%5B0%5D%0A%0Amain()\n %0A%0A  \n",
            "lines": "10"
        },
        {
            "label": "2025-10-04_20-58-23",
            "content": "@@ -23,24 +23,51 @@\n _init__(self\n+, PassMax: int, gasMax: int\n ):%0A        s\n@@ -101,20 +101,85 @@\n elf.\n-gas: int = 0\n+PassMax: int = PassMax%0A        self.gas: int = 0%0A        self.gasMax = gasMax\n %0A   \n@@ -344,37 +344,367 @@\n ))%0A%0A\n-def main():%0A    car = carro()\n+    def enter(self): %0A        if self.Pass %3C self.PassMax:%0A            self.Pass += 1%0A        else:%0A            print('fail: limite de pessoas atingido.')%0A    def fuel(self, amount):%0A        self.gas += amount%0A        if self.gas %3E self.gasMax:%0A            self.gas = self.gasMax%0Adef main():%0A    car = carro(2, 100)  # Exemplo de valores para PassMax e gasMax\n %0A   \n@@ -822,49 +822,52 @@\n     \n-if line == %22show%22:%0A            car.show()\n+parts = line.split()%0A%0A        cmd = parts%5B0%5D\n %0A%0Ama\n",
            "lines": "38"
        },
        {
            "label": "2025-10-04_21-25-35",
            "content": "@@ -31,35 +31,8 @@\n self\n-, PassMax: int, gasMax: int\n ):%0A \n@@ -74,85 +74,20 @@\n elf.\n-PassMax: int = PassMax%0A        self.gas: int = 0%0A        self.gasMax = gasMax\n+gas: int = 0\n %0A   \n@@ -154,17 +154,16 @@\n  f%22Pass:\n- \n %7Bself.Pa\n@@ -171,17 +171,16 @@\n s%7D, gas:\n- \n %7Bself.ga\n@@ -186,17 +186,16 @@\n as%7D, km:\n- \n %7Bself.km\n@@ -239,304 +239,20 @@\n rint\n- \n (s\n-elf.toString())%0A%0A    def enter(self): %0A        if self.Pass %3C self.passMax:%0A        self.Pass += 1%0A        else:%0A            print ('fail: limite de pessoas atingido.')%0A    def fuel(self, amount):%0A        self.gas += amount%0A        if self.gas %3E self.gasMax:%0A            self.gas = self.gasMax\n+tr(self))%0A\n %0Adef\n@@ -256,19 +256,19 @@\n def main\n- \n ()\n+:\n %0A    car\n@@ -280,16 +280,10 @@\n rro(\n-%22%22,%22%22\n )%0A\n- \n     \n@@ -400,34 +400,55 @@\n     \n-parts = line.split\n+if line == %22show%22:%0A            car.show\n ()%0A\n+%0A\n main\n- \n ()%0A%0A\n",
            "lines": "26"
        },
        {
            "label": "2025-10-05_17-22-45",
            "content": "@@ -1,17 +1,19 @@\n class \n-C\n+c\n ar\n+ro\n :%0A    de\n@@ -29,17 +29,17 @@\n _(self, \n-p\n+P\n assMax: \n@@ -45,12 +45,8 @@\n  int\n- = 2\n , ga\n@@ -58,14 +58,8 @@\n  int\n- = 100\n ):%0A \n@@ -74,25 +74,21 @@\n elf.\n-passMax = passMax\n+Pass: int = 0\n %0A   \n@@ -101,19 +101,26 @@\n elf.\n-ga\n+Pas\n sMax\n- = ga\n+: int = Pas\n sMax\n@@ -133,20 +133,24 @@\n    self.\n-Pass\n+gas: int\n  = 0%0A   \n@@ -162,20 +162,28 @@\n self.gas\n- = 0\n+Max = gasMax\n %0A       \n@@ -190,16 +190,21 @@\n  self.km\n+: int\n  = 0%0A%0A  \n@@ -245,13 +245,14 @@\n n f%22\n-p\n+P\n ass:\n+ \n %7Bsel\n@@ -264,16 +264,17 @@\n s%7D, gas:\n+ \n %7Bself.ga\n@@ -280,16 +280,17 @@\n as%7D, km:\n+ \n %7Bself.km\n@@ -296,160 +296,63 @@\n m%7D%22%0A\n-%0A\n     \n-def enter(self):%0A        if self.Pass %3C self.passMax:%0A            self.Pass += 1%0A        else:%0A            print(%22fail: limite de pessoas atingido%22\n+%0A    def show(self):%0A        print (self.toString()\n )%0A%0A \n@@ -362,20 +362,21 @@\n def \n-leave\n+enter\n (self):\n+ \n %0A   \n@@ -397,17 +397,24 @@\n ass \n-%3E 0:%0A    \n+%3C self.passMax:%0A\n     \n@@ -431,9 +431,9 @@\n ass \n--\n++\n = 1%0A\n@@ -467,42 +467,46 @@\n rint\n-(%22\n+ ('\n fail: \n-nao ha ninguem no carro%22)%0A\n+limite de pessoas atingido.')\n %0A   \n@@ -521,28 +521,20 @@\n l(self, \n-valueFuel: i\n+amou\n nt):%0A   \n@@ -550,25 +550,22 @@\n .gas += \n-valueFuel\n+amount\n %0A       \n@@ -631,17 +631,16 @@\n Max%0A\n-%0A\n def main\n ():%0A\n@@ -639,19 +639,19 @@\n main\n+ \n ()\n-:\n %0A    car\n ro =\n@@ -650,19 +650,25 @@\n  car\n-ro\n  = \n-Car(\n+carro(%22%22,%22%22\n )%0A\n+ \n     \n@@ -695,13 +695,8 @@\n line\n-: str\n  = i\n@@ -714,408 +714,109 @@\n     \n-print(%22$%22 + line)%0A    args: list%5Bstr%5D = line.split()%0A        if args %5B0%5D == %22end%22:%0A            break%0A        elif args%5B0%5D == %22show%22:%0A            print(carro)%0A        elif args%5B0%5D == %22enter%22:%0A            carro.enter()%0A        elif args%5B0%5D == %22leave%22:%0A            carro.leave()%0A        elif args%5B0%5D == %22fuel%22:%0A            valueFuel: int = int(args%5B1%5D)%0A            carro.fuel(valueFuel)%0A       %0A\n+if line == %22end%22:%0A            break%0A%0A        print(%22$%22 + line)%0A        parts = line.split()\n %0Amain\n+ \n ()%0A\n+%0A\n     \n",
            "lines": "35"
        },
        {
            "label": "2025-10-05_17-30-04",
            "content": "@@ -809,20 +809,16 @@\n + line)%0A\n-    \n     args\n@@ -855,24 +855,25 @@\n      if args\n+ \n %5B0%5D == %22end%22\n",
            "lines": "49"
        },
        {
            "label": "2025-10-05_17-30-47",
            "content": "@@ -2,18 +2,16 @@\n lass Car\n-ro\n :%0A    de\n@@ -234,17 +234,16 @@\n  f%22pass:\n- \n %7Bself.Pa\n@@ -251,17 +251,16 @@\n s%7D, gas:\n- \n %7Bself.ga\n@@ -266,17 +266,16 @@\n as%7D, km:\n- \n %7Bself.km\n@@ -713,468 +713,8 @@\n ax%0A%0A\n-    def driveDistance(self, distance: int):%0A        if self.Pass == 0:%0A            print(%22fail: nao ha niguem no carro%22)%0A            return%0A        if self.gas == 0:%0A            print(%22fail: tanque vazio%22)%0A            return%0A        if distance %3E self.gas:%0A            print(f%22fail: tanque vazio apos andar %7Bself.gas%7D km%22)%0A            self.km += self.gas%0A            self.gas = 0%0A        else:%0A            self.km += distance%0A            self.gas -= distance%0A%0A\n def \n@@ -736,18 +736,16 @@\n ro = Car\n-ro\n ()%0A    w\n@@ -1189,116 +1189,8 @@\n     \n- elif args%5B0%5D == %22drive%22:%0A            distance: int = int(args%5B1%5D)%0A            carro.driveDistance(distance)\n %0A%0Ama\n",
            "lines": "49"
        },
        {
            "label": "2025-10-05_18-13-34",
            "content": "@@ -811,33 +811,32 @@\n %22fail: nao ha ni\n-n\n guem no carro%22)%0A\n",
            "lines": "66"
        },
        {
            "label": "2025-10-05_18-16-19",
            "content": "class Carro:\n    def __init__(self, passMax: int = 2, gasMax: int = 100):\n        self.passMax = passMax\n        self.gasMax = gasMax\n        self.Pass = 0\n        self.gas = 0\n        self.km = 0\n\n    def __str__(self):\n        return f\"pass: {self.Pass}, gas: {self.gas}, km: {self.km}\"\n\n    def enter(self):\n        if self.Pass < self.passMax:\n            self.Pass += 1\n        else:\n            print(\"fail: limite de pessoas atingido\")\n\n    def leave(self):\n        if self.Pass > 0:\n            self.Pass -= 1\n        else:\n            print(\"fail: nao ha ninguem no carro\")\n\n    def fuel(self, valueFuel: int):\n        self.gas += valueFuel\n        if self.gas > self.gasMax:\n            self.gas = self.gasMax\n\n    def driveDistance(self, distance: int):\n        if self.Pass == 0:\n            print(\"fail: nao ha ninguem no carro\")\n            return\n        if self.gas == 0:\n            print(\"fail: tanque vazio\")\n            return\n        if distance > self.gas:\n            print(f\"fail: tanque vazio apos andar {self.gas} km\")\n            self.km += self.gas\n            self.gas = 0\n        else:\n            self.km += distance\n            self.gas -= distance\n\ndef main():\n    carro = Carro()\n    while True:\n        line: str = input()\n        print(\"$\" + line)\n        args: list[str] = line.split()\n        if args[0] == \"end\":\n            break\n        elif args[0] == \"show\":\n            print(carro)\n        elif args[0] == \"enter\":\n            carro.enter()\n        elif args[0] == \"leave\":\n            carro.leave()\n        elif args[0] == \"fuel\":\n            valueFuel: int = int(args[1])\n            carro.fuel(valueFuel)\n        elif args[0] == \"drive\":\n            distance: int = int(args[1])\n            carro.driveDistance(distance)\n\nmain()\n    ",
            "lines": "66"
        }
    ]
}